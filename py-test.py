# An example python script demonstrating basic utilization of wrapping
# functions generated by SWIG. To run it, activate virtual environment
# with IPython installed, run ipython interpreter and type:
# In[1]: %run sources/StromaV/py-test.py

from StromaV import pipeline as svp

pipe = svp.AnalysisPipeline()

class MyProcessor( svp.iEventProcessor ):
    def __init__(self):
        # The call for parent ctr (svp.iEventProcessor) has to provide the
        # textual name of created processor.
        super( MyProcessor, self ).__init__( "MyProcessor" )

    def _V_process_event(self, event):
        # This is only method in your custom processor class that must be
        # implemented (otherwise it is useless and you will get "pure virtual
        # method called error").
        pass


myProc = MyProcessor()

pipe.push_back_processor( myProc )

