# Copyright (c) 2017 Renat R. Dusaev <crank@qcrypt.org>
# Author: Renat R. Dusaev <crank@qcrypt.org>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#
# A bash completion script for StromaV afpipe application.

# NOTE: this is preliminary draft demonstrating quite basic functions on a
# inefficient way. It just transforms the --help output to an array of
# available options that bash completion may substitute when only first
# argument is entered. We can go deeper by providing some additional
# functionality within the goo's `Configuration` class to provide more
# elaborated completion tool.
# To check out this completion just $ source it (from sources directory since
# this rudimentary draft won't be installed), preferably in a temporary
# dedicated bash session.

__sV_afpipe_complete()
{
    local afpipe_exec="${COMP_WORDS[0]}"
    local current="${COMP_WORDS[$COMP_CWORD]}"
    if [[ ( -f "${afpipe_exec}" || -h "${afpipe_exec}" ) && -r "${afpipe_exec}" ]]
    then
        COMPREPLY=()
        if [[ ${COMP_CWORD} == 1 ]]
        then
            subcommands_1=$($afpipe_exec --help                             \
                    | egrep "^\s+\[-.*\]" --color=never                     \
                    | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"  \
                    | sed 's/.*\[\([^]]*\)\].*/\1/g'                        \
                    | cut -f1 -d' '                                         \
                    | awk -F'|' '{print $1;} $2 {print $2}' )
            COMPREPLY=( $(compgen -W "${subcommands_1}" -- ${current}) )
            return 0
        fi
    fi
}
complete -F __sV_afpipe_complete afpipe-rdbg

